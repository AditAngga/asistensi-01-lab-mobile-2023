// Generated by view binder compiler. Do not edit!
package com.example.assignment3.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.assignment3.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMainBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final Button btnClear;

  @NonNull
  public final Button btnDec;

  @NonNull
  public final Button btnDel;

  @NonNull
  public final Button btnDivided;

  @NonNull
  public final Button btnEight;

  @NonNull
  public final Button btnEquals;

  @NonNull
  public final Button btnFive;

  @NonNull
  public final Button btnFour;

  @NonNull
  public final Button btnMin;

  @NonNull
  public final Button btnMultiple;

  @NonNull
  public final Button btnNine;

  @NonNull
  public final Button btnOne;

  @NonNull
  public final Button btnPlus;

  @NonNull
  public final Button btnSeven;

  @NonNull
  public final Button btnSix;

  @NonNull
  public final Button btnThree;

  @NonNull
  public final Button btnTwo;

  @NonNull
  public final Button btnZero;

  @NonNull
  public final LinearLayout button;

  @NonNull
  public final LinearLayout fifth;

  @NonNull
  public final LinearLayout first;

  @NonNull
  public final LinearLayout fourth;

  @NonNull
  public final TextView result;

  @NonNull
  public final LinearLayout second;

  @NonNull
  public final LinearLayout third;

  private ActivityMainBinding(@NonNull RelativeLayout rootView, @NonNull Button btnClear,
      @NonNull Button btnDec, @NonNull Button btnDel, @NonNull Button btnDivided,
      @NonNull Button btnEight, @NonNull Button btnEquals, @NonNull Button btnFive,
      @NonNull Button btnFour, @NonNull Button btnMin, @NonNull Button btnMultiple,
      @NonNull Button btnNine, @NonNull Button btnOne, @NonNull Button btnPlus,
      @NonNull Button btnSeven, @NonNull Button btnSix, @NonNull Button btnThree,
      @NonNull Button btnTwo, @NonNull Button btnZero, @NonNull LinearLayout button,
      @NonNull LinearLayout fifth, @NonNull LinearLayout first, @NonNull LinearLayout fourth,
      @NonNull TextView result, @NonNull LinearLayout second, @NonNull LinearLayout third) {
    this.rootView = rootView;
    this.btnClear = btnClear;
    this.btnDec = btnDec;
    this.btnDel = btnDel;
    this.btnDivided = btnDivided;
    this.btnEight = btnEight;
    this.btnEquals = btnEquals;
    this.btnFive = btnFive;
    this.btnFour = btnFour;
    this.btnMin = btnMin;
    this.btnMultiple = btnMultiple;
    this.btnNine = btnNine;
    this.btnOne = btnOne;
    this.btnPlus = btnPlus;
    this.btnSeven = btnSeven;
    this.btnSix = btnSix;
    this.btnThree = btnThree;
    this.btnTwo = btnTwo;
    this.btnZero = btnZero;
    this.button = button;
    this.fifth = fifth;
    this.first = first;
    this.fourth = fourth;
    this.result = result;
    this.second = second;
    this.third = third;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnClear;
      Button btnClear = ViewBindings.findChildViewById(rootView, id);
      if (btnClear == null) {
        break missingId;
      }

      id = R.id.btnDec;
      Button btnDec = ViewBindings.findChildViewById(rootView, id);
      if (btnDec == null) {
        break missingId;
      }

      id = R.id.btnDel;
      Button btnDel = ViewBindings.findChildViewById(rootView, id);
      if (btnDel == null) {
        break missingId;
      }

      id = R.id.btnDivided;
      Button btnDivided = ViewBindings.findChildViewById(rootView, id);
      if (btnDivided == null) {
        break missingId;
      }

      id = R.id.btnEight;
      Button btnEight = ViewBindings.findChildViewById(rootView, id);
      if (btnEight == null) {
        break missingId;
      }

      id = R.id.btnEquals;
      Button btnEquals = ViewBindings.findChildViewById(rootView, id);
      if (btnEquals == null) {
        break missingId;
      }

      id = R.id.btnFive;
      Button btnFive = ViewBindings.findChildViewById(rootView, id);
      if (btnFive == null) {
        break missingId;
      }

      id = R.id.btnFour;
      Button btnFour = ViewBindings.findChildViewById(rootView, id);
      if (btnFour == null) {
        break missingId;
      }

      id = R.id.btnMin;
      Button btnMin = ViewBindings.findChildViewById(rootView, id);
      if (btnMin == null) {
        break missingId;
      }

      id = R.id.btnMultiple;
      Button btnMultiple = ViewBindings.findChildViewById(rootView, id);
      if (btnMultiple == null) {
        break missingId;
      }

      id = R.id.btnNine;
      Button btnNine = ViewBindings.findChildViewById(rootView, id);
      if (btnNine == null) {
        break missingId;
      }

      id = R.id.btnOne;
      Button btnOne = ViewBindings.findChildViewById(rootView, id);
      if (btnOne == null) {
        break missingId;
      }

      id = R.id.btnPlus;
      Button btnPlus = ViewBindings.findChildViewById(rootView, id);
      if (btnPlus == null) {
        break missingId;
      }

      id = R.id.btnSeven;
      Button btnSeven = ViewBindings.findChildViewById(rootView, id);
      if (btnSeven == null) {
        break missingId;
      }

      id = R.id.btnSix;
      Button btnSix = ViewBindings.findChildViewById(rootView, id);
      if (btnSix == null) {
        break missingId;
      }

      id = R.id.btnThree;
      Button btnThree = ViewBindings.findChildViewById(rootView, id);
      if (btnThree == null) {
        break missingId;
      }

      id = R.id.btnTwo;
      Button btnTwo = ViewBindings.findChildViewById(rootView, id);
      if (btnTwo == null) {
        break missingId;
      }

      id = R.id.btnZero;
      Button btnZero = ViewBindings.findChildViewById(rootView, id);
      if (btnZero == null) {
        break missingId;
      }

      id = R.id.button;
      LinearLayout button = ViewBindings.findChildViewById(rootView, id);
      if (button == null) {
        break missingId;
      }

      id = R.id.fifth;
      LinearLayout fifth = ViewBindings.findChildViewById(rootView, id);
      if (fifth == null) {
        break missingId;
      }

      id = R.id.first;
      LinearLayout first = ViewBindings.findChildViewById(rootView, id);
      if (first == null) {
        break missingId;
      }

      id = R.id.fourth;
      LinearLayout fourth = ViewBindings.findChildViewById(rootView, id);
      if (fourth == null) {
        break missingId;
      }

      id = R.id.result;
      TextView result = ViewBindings.findChildViewById(rootView, id);
      if (result == null) {
        break missingId;
      }

      id = R.id.second;
      LinearLayout second = ViewBindings.findChildViewById(rootView, id);
      if (second == null) {
        break missingId;
      }

      id = R.id.third;
      LinearLayout third = ViewBindings.findChildViewById(rootView, id);
      if (third == null) {
        break missingId;
      }

      return new ActivityMainBinding((RelativeLayout) rootView, btnClear, btnDec, btnDel,
          btnDivided, btnEight, btnEquals, btnFive, btnFour, btnMin, btnMultiple, btnNine, btnOne,
          btnPlus, btnSeven, btnSix, btnThree, btnTwo, btnZero, button, fifth, first, fourth,
          result, second, third);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
